# Configuration de Kafka pour envoyer des notifications au microservice Product
mp.messaging.outgoing.product-status.topic=product-status
mp.messaging.outgoing.product-status.connector=smallrye-kafka
mp.messaging.outgoing.product-status.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.product-status.bootstrap.servers=localhost:9092

# Configuration de Kafka pour recevoir les commandes du microservice Order
mp.messaging.incoming.order-requests.topic=order-requests
mp.messaging.incoming.order-requests.connector=smallrye-kafka
mp.messaging.incoming.order-requests.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Configuration de Kafka pour envoyer les réponses au microservice Order
mp.messaging.outgoing.order-responses.topic=order-responses
mp.messaging.outgoing.order-responses.connector=smallrye-kafka
mp.messaging.outgoing.order-responses.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.order-responses.bootstrap.servers=localhost:9092

# Configuration de la base de données H2
quarkus.datasource.db-kind=h2
quarkus.datasource.jdbc.url=jdbc:h2:mem:inventory;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
quarkus.datasource.username=sa
quarkus.datasource.password=sa
quarkus.datasource.jdbc.driver=org.h2.Driver
quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.log.sql=true